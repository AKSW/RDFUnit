@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix rutg:    <http://rdfunit.aksw.org/data/generators#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rlog:    <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix rut:    <http://rdfunit.aksw.org/ns/core#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rutt:    <http://rdfunit.aksw.org/data/tests#> .
@prefix rutp:    <http://rdfunit.aksw.org/data/patterns#> .
@prefix dcterms:  <http://purl.org/dc/terms/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .@prefix nif: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .

rutt:nif-Deprecated-schema
    a       rut:ManualTestCase ;
    dcterms:description "You are using the old vocabulary, a newer version is available at http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:WARN ;
    rut:sparqlWhere """ {
                            ?this a ?class .
                            FILTER ( 
                                CONTAINS (str(?class), "http://nlp2rdf.lod2.eu/schema/string/") ||
                                CONTAINS (str(?class), "http://nlp2rdf.lod2.eu/schema/sso/")
                                ) 
                        } """ ;
    rut:sparqlPrevalence """  """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue rdf:type
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?class""";
    ];
    .

rutt:nif-beginIndex-of-Context-MUST-be-zero
    a       rut:ManualTestCase ;
    dcterms:description "nif:beginIndex of nif:Context MUST be zero";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:Context , nif:beginIndex ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                         		?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?begin .
                         		FILTER (?begin != 0)
#was
#FILTER (xsd:nonNegativeInteger(?begin) != xsd:nonNegativeInteger(0))
#typecast to nonNegativeInteger nor implemented in Virtuoso
                         	} """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?begin .} """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?begin""";
    ];
    .

rutt:nif-length-of-isString-equal-with-endIndex
    a       rut:ManualTestCase ;
    dcterms:description "for the context, the length of nif:isString must equal nif:endIndex";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:Context , nif:beginIndex, nif:endIndex ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                         		?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#isString> ?string .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?length .
                         		BIND ( strlen(?string) as ?a)
                         		BIND ( ?length as ?b)
#was
#BIND ( xsd:nonNegativeInteger(strlen(?string)) as ?a)
#BIND ( xsd:nonNegativeInteger(?length) as ?b)
#typecast to nonNegativeInteger nor implemented in Virtuoso
                         		FILTER ( ?a != ?b  )
                   		} """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#isString> ?string .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?length . } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?length""";
    ];
    .



rutt:nif-anchorOf-must-match-the-substring-of-isString-calculated-with-begin-and-end-index
    a       rut:ManualTestCase ;
    dcterms:description "nif:anchorOf must match the substring of nif:isString calculated with begin and end index: SUBSTR(?isString, ?beginIndex , (?endIndex - ?beginIndex) ) equals ?anchorOf ";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:anchorOf , nif:beginIndex, nif:endIndex ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                         		?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#anchorOf> ?anchorOf .
                         		?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?beginIndex .
                         		?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?endIndex .
                         		?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#referenceContext> [ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#isString> ?isString ]  .
#add 1 because string counting counts chars instead of offsets in SPARQL
								#have not this test fail because of insufficient string length. String length tested in other test case
								FILTER((?endIndex - ?beginIndex)>0)
								#begin has to be incremented because SPARQL counts chars, not offsets
                         		BIND (SUBSTR(?isString, ?beginIndex+1 , (?endIndex - ?beginIndex) ) AS ?test ) .
                         	    FILTER (str(?test) != str(?anchorOf )) .

                         	} """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#anchorOf> ?anchorOf .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?beginIndex .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?endIndex .
                                ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#referenceContext> [ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#isString> ?isString ]  . } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?endIndex""";
    ];
    .

rutt:nif-string-length-not-zero
    a       rut:ManualTestCase ;
    dcterms:description "nif:String should not be of length zero";
	rut:appliesTo rut:Schema ;
	rut:generated rut:ManuallyGenerated ;
    rut:references <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
	        ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#String> .
			?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?beginIndex .
	        ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?endIndex .
	        FILTER((?endIndex - ?beginIndex)=0)
	    } """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
	        ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#String> .
			?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?beginIndex .
	        ?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?endIndex .
        } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?endIndex""";
    ];
    .

rutt:nif-rdftype-is-misspelled
    a       rut:ManualTestCase ;
    dcterms:description "rdf:type nif:RFC5147String is misspelled, e.g. RCF5147 or RFC547";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
        ?this a ?class .
        FILTER (
            CONTAINS (str(?class), "RFC") &&  ! CONTAINS (str(?class), "RFC5147String") ||
            CONTAINS (str(?class), "5147String")  && ! CONTAINS (str(?class), "RFC")
        )
    } """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a ?class .  } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue rdf:type ;
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?class""";
    ];
    .

rutt:nif-non-context-CString-must-have-explicit-referenceContext
    a       rut:ManualTestCase ;
    dcterms:description "all nif:CString and subclasses that aren't typed as nif:Context must have an explicit property nif:referenceContext";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:CString, nif:CStringImpl, nif:OffsetBasedString, nif:RFC5147String, nif:referenceContext ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
			?this rdf:type/rdfs:subClassOf+ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
	        FILTER (NOT EXISTS {?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> } ) .
	        FILTER (NOT EXISTS {?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#referenceContext> [ a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> ] . } )
        } """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a ?type .
								?type rdfs:subClassOf+ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
                            } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#referenceContext>
    ];
    .

#TODO change to two TYPRODEP cases
#rutt:nif-CString-and-subclasses-MUST-have-beginIndex-and-endIndex
#    a       rut:ManualTestCase ;
#    dcterms:description "all nif:CString and subclasses (i.e. RFC5147String, CStringImpl, OffsetBasedString) MUST have nif:beginIndex and nif:endIndex";
#    rut:appliesTo rut:Schema ;
#    rut:generated rut:ManuallyGenerated ;
#    rut:references nif:CString, nif:CStringImpl, nif:OffsetBasedString, nif:RFC5147String, nif:referenceContext, nif:endIndex ;
#    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
#    rut:testCaseLogLevel rlog:ERROR ;
#    rut:sparqlWhere """ {
#        ?this a ?type .
#		?type rdfs:subClassOf+ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
#        FILTER ( NOT EXISTS {?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#beginIndex> ?o  }
#              || NOT EXISTS {?this <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#endIndex> ?o  }    )
#    } """ ;
#    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
#                               ?this a ?type .
#		?type rdfs:subClassOf+ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
#                            } """ . 

rutt:nif-Context-must-have-rdftype-of-a-subclass-of-CString
    a       rut:ManualTestCase ;
    dcterms:description "All nif:Context must have rdf:type of a subclass of nif:CString, the context --serving as a reference -- can only be a continuous string.";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:CString, nif:CStringImpl, nif:OffsetBasedString, nif:RFC5147String, nif:beginIndex ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
        ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
        FILTER NOT EXISTS { ?this rdf:type/rdfs:subClassOf+ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString>  }
        # previous:
       #       {?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CStringImpl>}
       #         UNION
       #         {?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#OffsetBasedString>}
       #         UNION
       #         {?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#RFC5147String>}
        
    } """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Context> .
                            } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue rdf:type
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString>;
    ];
    .

rutt:nif-CString-is-abstract-it-MUST-only-exist-with-a-subclass
    a       rut:ManualTestCase ;
    dcterms:description "nif:CString is an abstract class, it MUST only exist, if a subclass is used as well (e.g. CStringImpl, RFC5147String, OffsetBasedString)";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:CString, nif:CStringImpl, nif:OffsetBasedString, nif:RFC5147String ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
	        ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
	        FILTER ( NOT EXISTS { ?this rdf:type/rdfs:subClassOf+ <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString>  } )
	    } """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
                            } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue rdf:type
    ];
    .

rutt:nif-CString-is-abstract-it-SHOULD-not-be-serialized
    a       rut:ManualTestCase ;
    dcterms:description "nif:CString is an abstract class, it is not recommended to be serialized explicitly. Please only serialize the subclasses, e.g. nif:CStringImpl or nif:RFC5147String and the general nif:String  class.";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references nif:CString ;
    rut:source <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> ;
    rut:testCaseLogLevel rlog:WARN ;
    rut:sparqlWhere """ {
        ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString> .
      
    } """ ;
    rut:sparqlPrevalence """ SELECT (count( DISTINCT ?this) AS ?total) WHERE {
                                ?this a <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#String> .
                            } """ ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue rdf:type
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#CString>;
    ];
    .
