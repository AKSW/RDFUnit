@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rlog:    <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#> .
@prefix rutg: <http://rdfunit.aksw.org/data/generators#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rut: <http://rdfunit.aksw.org/ns/core#> .
@prefix rutp: <http://rdfunit.aksw.org/data/patterns#> .
@prefix rutt: <http://rdfunit.aksw.org/data/tests#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .


#classes under owl:Thing must be one of a pre-selected list
rutt:dbo-restrict-TopClasses
      a rut:ManualTestCase ;
      dcterms:description "DBpedia Ontology only allows 9 top level classes, any new top level classes need to be discussed here -link missing-";
      rut:appliesTo rut:Schema ;
      rut:generated rut:ManuallyGenerated ;
      rut:references <http://www.w3.org/2002/07/owl#Class> ;
      rut:source <http://dbpedia.org/ontology/> ;
      rut:testCaseLogLevel rlog:ERROR ;
      rut:sparqlWhere """ {
                          ?this rdfs:subClassOf owl:Thing  .
                          FILTER NOT EXISTS {
                            ?this rdfs:subClassOf ?otherClass .
                            FILTER(?otherClass != owl:Thing) .
                            FILTER(?otherClass != ?this) .
                          }
                          FILTER(?this NOT IN (
                              <http://dbpedia.org/ontology/Activity>,
                              <http://dbpedia.org/ontology/Agent>,
                              <http://dbpedia.org/ontology/Concept>,
                              <http://dbpedia.org/ontology/CommunicationSystem>,
                              <http://dbpedia.org/ontology/Condition>,
                              <http://dbpedia.org/ontology/Event>,
                              <http://dbpedia.org/ontology/PhysicalThing>,
                              <http://dbpedia.org/ontology/Place>,
                              <http://dbpedia.org/ontology/TimePeriod>)
                          ).
      } """ ;
      rut:sparqlPrevalence """ """  .



rutt:dbo-checkClassesLabels
a       rut:ManualTestCase ;
dcterms:description "Each owl:Class should have at least one rdfs:label";
rut:appliesTo rut:Schema ;
rut:generated rut:ManuallyGenerated ;
rut:references <http://www.w3.org/2000/01/rdf-schema#label> ;
rut:source <http://dbpedia.org/ontology/> ;
rut:testCaseLogLevel rlog:WARN ;
rut:sparqlWhere """ {    ?this a owl:Class.
                         FILTER NOT EXISTS {?this rdfs:label ?v1 }} """ ;
rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this a owl:Class . } """ ;
rut:resultAnnotation [
 a rut:ResultAnnotation ;
 rut:annotationProperty sh:predicate ;
 rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#label> ;
];
.

rutt:dbo-checkClassesLabels2
a       rut:ManualTestCase ;
dcterms:description "(4 artifacts remain) Each owl:Class should not have more than one rdfs:label with the same language";
rut:appliesTo rut:Schema;
rut:generated rut:ManuallyGenerated ;
rut:references <http://www.w3.org/2000/01/rdf-schema#label> ;
rut:source <http://dbpedia.org/ontology/> ;
rut:testCaseLogLevel rlog:WARN ;
rut:sparqlWhere """ {
                         ?this a owl:Class.
                         ?this rdfs:label ?v1 .
                         ?this rdfs:label ?v2 .
                         FILTER (str(?v1) != str(?v2) ) .
                         FILTER (lang(?v1) = lang(?v2)) .
                     }""" ;
# TODO count of all rdfs:labels of all classes
rut:sparqlPrevalence """ """ ;
#rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this a owl:Class . } """ ;
rut:resultAnnotation [
 a rut:ResultAnnotation ;
 rut:annotationProperty sh:predicate ;
 rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#label> ;
];
.

rutt:dbo-checkClassesComments
  a       rut:ManualTestCase ;
  dcterms:description "Each owl:Class should have at least one rdfs:comment";
  rut:appliesTo rut:Schema ;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#comment> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  rut:sparqlWhere """ {    ?this a owl:Class.
                           FILTER NOT EXISTS {?this rdfs:comment ?v1 }} """ ;
  rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this a owl:Class . } """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#comment> ;
];
.

rutt:dbo-checkClassesComments2
  a       rut:ManualTestCase ;
  dcterms:description "Each owl:Class should not have more than one rdfs:comment with the same language";
  rut:appliesTo rut:Schema;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#comment> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  rut:sparqlWhere """ {
                           ?this a owl:Class.
                           ?this rdfs:comment ?v1 .
                           ?this rdfs:comment ?v2 .
                           FILTER (?v1 != ?v2 ) .
                           FILTER (lang(?v1) = lang(?v2)) .
                       }""" ;
  # TODO count of all rdfs:comment of all classes
  rut:sparqlPrevalence """ """ ;
  #rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this a owl:Class . } """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#comment> ;
];
.

rutt:dbo-checkPropertiesLabels
a       rut:ManualTestCase ;
dcterms:description "Each property should have at least one rdfs:label";
rut:appliesTo rut:Schema ;
rut:generated rut:ManuallyGenerated ;
rut:references <http://www.w3.org/2000/01/rdf-schema#label> ;
rut:source <http://dbpedia.org/ontology/> ;
rut:testCaseLogLevel rlog:WARN ;
rut:sparqlWhere """ {
                         ?this rdf:type ?property . 
                         FILTER NOT EXISTS {?this rdfs:label ?v1 . } .
                         FILTER(?property IN (rdf:Property, owl:DatatypeProperty, owl:ObjectProperty)) .
                         } """ ;
rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {
	{?this a rdf:Property}UNION{?this a owl:DatatypeProperty}UNION {?this a owl:ObjectProperty  }} """ ;
rut:resultAnnotation [
 a rut:ResultAnnotation ;
 rut:annotationProperty sh:predicate ;
 rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#label> ;
];
.

rutt:dbo-checkPropertiesLabels2
a       rut:ManualTestCase ;
dcterms:description "Each property should not have more than one rdfs:label with the same language";
rut:appliesTo rut:Schema;
rut:generated rut:ManuallyGenerated ;
rut:references <http://www.w3.org/2000/01/rdf-schema#label> ;
rut:source <http://dbpedia.org/ontology/> ;
rut:testCaseLogLevel rlog:WARN ;
rut:sparqlWhere """ {
                         ?this rdf:type ?property .
                         ?this rdfs:label ?v1 .
                         ?this rdfs:label ?v2 .
                         FILTER (?v1 != ?v2 ) .
                         FILTER (lang(?v1) = lang(?v2)) .
                         filter(?property IN (rdf:Property, owl:DatatypeProperty, owl:FunctionalProperty)) .
                     }""" ;
# TODO count of all rdfs:labels of all classes
rut:sparqlPrevalence """ """ ;
#rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this a owl:Class . } """ ;
rut:resultAnnotation [
 a rut:ResultAnnotation ;
 rut:annotationProperty sh:predicate ;
 rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#label> ;
];
.

rutt:dbo-checkPropertiesComments
  a       rut:ManualTestCase ;
  dcterms:description "Each property should have at least one rdfs:comment";
  rut:appliesTo rut:Schema ;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#comment> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  rut:sparqlWhere """ {
                           ?this rdf:type ?property .
                           FILTER NOT EXISTS {?this rdfs:comment ?v1 }
                           filter(?property IN (rdf:Property, owl:DatatypeProperty, owl:ObjectProperty)) .
                           } """ ;
  rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this rdf:type ?property . filter(?property IN (rdf:Property, owl:DatatypeProperty, owl:ObjectProperty)) .} """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#comment> ;
];
.

rutt:dbo-checkPropertyComments2
  a       rut:ManualTestCase ;
  dcterms:description "Each property should not have more than one rdfs:comment with the same language";
  rut:appliesTo rut:Schema;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#comment> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  rut:sparqlWhere """ {
                           ?this rdf:type ?property .
                           ?this rdfs:comment ?v1 .
                           ?this rdfs:comment ?v2 .
                           FILTER (?v1 != ?v2 ) .
                           FILTER (lang(?v1) = lang(?v2)) .
                           filter(?property IN (rdf:Property, owl:DatatypeProperty, owl:FunctionalProperty)) .
                       }""" ;
  # TODO count of all rdfs:labels of all classes
  rut:sparqlPrevalence """ """ ;
  #rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {?this a owl:Class . } """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#comment> ;
];
.

rutt:dbo-noPersonSubclass
  a       rut:ManualTestCase ;
  dcterms:description "No subclasses of Person are allowed";
  rut:appliesTo rut:Schema;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#subClassOf> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:ERROR ;
  rut:sparqlWhere """ { ?this rdfs:subClassOf <http://dbpedia.org/ontology/Person> .
						FILTER (?this !=<http://dbpedia.org/ontology/Person>) .
                       }""" ;
  #
  rut:sparqlPrevalence """ """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#subClassOf> ;
];
.

rutt:dbo-noDualSuperClass
  a       rut:ManualTestCase ;
  dcterms:description "(needs checking) Each owl:Class should not have two or more superclasses";
  rut:appliesTo rut:Schema;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#subClassOf> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  rut:sparqlWhere """ {
                        ?this rdf:type owl:Class .
                        ?this rdfs:subClassOf ?v1 .
                        ?this rdfs:subClassOf ?v2 .
                        
                        FILTER NOT EXISTS {?v1 rdfs:subClassOf ?v2 }.
                        FILTER NOT EXISTS {?v2 rdfs:subClassOf ?v1 }.
                        
                        FILTER(?v1 != ?v2) .
                        
                        FILTER(?v1 != owl:Thing) .
                        FILTER(?v2 != owl:Thing) .
                        
                        FILTER(?this != ?v1) .
                        FILTER(?this != ?v2) .
                       }""" ;
  # TODO all classes
  rut:sparqlPrevalence """ """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#subClassOf> ;
];
.

rutt:dbo-noDualSuperProperty
  a       rut:ManualTestCase ;
  dcterms:description "Each property should not have two or more superproperties";
  rut:appliesTo rut:Schema;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  rut:sparqlWhere """ {
                          ?this rdf:type ?property .
                          ?this rdfs:subPropertyOf ?v1 .
                          ?this rdfs:subPropertyOf ?v2 .
                          filter(?v1 != ?v2) .
                          filter(?property IN (rdf:Property, owl:DatatypeProperty, owl:ObjectProperty)) .
                      }""" ;
  #
  rut:sparqlPrevalence """ """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> ;
];
.



rutt:dbo-checkDomainRange
  a       rut:ManualTestCase ;
  dcterms:description "Each property should have exactly one rdfs:domain and rdfs:range";
  rut:appliesTo rut:Schema;
  rut:generated rut:ManuallyGenerated ;
  rut:references <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> ;
  rut:source <http://dbpedia.org/ontology/> ;
  rut:testCaseLogLevel rlog:WARN ;
  # TODO
  rut:sparqlWhere """ {
                        ?this rdfs:domain ?v1 .
                        ?this rdfs:range ?v2 .
                        filter(?v1 = '') .
                        filter(?v2 = '') .
                      }""" ;
  #
  rut:sparqlPrevalence """ """ ;
rut:resultAnnotation [
   a rut:ResultAnnotation ;
   rut:annotationProperty sh:predicate ;
   rut:annotationValue <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> ;
];
.

#####################
#Other tests
#####################


# dbo:deathDate after dbo:birthDate
rutt:dbo-COMP-birthdeatdate
    a       rut:PatternBasedTestCase ;
    dcterms:description "A dbp:birthDate cannot be after a dbo:deathDate" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:COMP ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/birthDate> ;
    rut:references <http://dbpedia.org/ontology/deathDate> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/birthDate> ;
            rut:parameter rutp:COMP-P1
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/deathDate> ;
            rut:parameter rutp:COMP-P2
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue ">" ;
            rut:parameter rutp:COMP-OP
        ] ;
    rut:testCaseLogLevel
                  rlog:ERROR .


# dbo:demolitionDate after dbo:buildingStartDate
rutt:dbo-COMP-demolitionbuildingstartdate
    a       rut:PatternBasedTestCase ;
    dcterms:description "A dbp:buildingStartDate cannot be after a dbo:demolitionDate" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:COMP ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/buildingStartDate>, <http://dbpedia.org/ontology/demolitionDate> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/buildingStartDate> ;
            rut:parameter rutp:COMP-P1
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/demolitionDate> ;
            rut:parameter rutp:COMP-P2
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue ">" ;
            rut:parameter rutp:COMP-OP
        ] ;
    rut:testCaseLogLevel
                  rlog:ERROR .


# dbo:latestReleaseDate after dbo:releaseDate
rutt:dbo-COMP-releaselatestreleasedate
    a       rut:PatternBasedTestCase ;
    dcterms:description "A dbp:releaseDate cannot be after a dbo:latestReleaseDate" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:COMP ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/latestReleaseDate>, <http://dbpedia.org/ontology/releaseDate> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:binding
    [ a     rut:Binding ;
        rut:bindingValue <http://dbpedia.org/ontology/releaseDate> ;
        rut:parameter rutp:COMP-P1
    ] ;
    rut:binding
    [ a     rut:Binding ;
        rut:bindingValue <http://dbpedia.org/ontology/latestReleaseDate> ;
        rut:parameter rutp:COMP-P2
    ] ;
    rut:binding
    [ a     rut:Binding ;
        rut:bindingValue ">" ;
        rut:parameter rutp:COMP-OP
    ] ;
    rut:testCaseLogLevel
                  rlog:ERROR .


# Different countries having the same capital
rutt:dbo-INVFUNC-countriessamecapital
    a       rut:PatternBasedTestCase ;
    dcterms:description "Two different dbo:Country(s) should not have the same dbo:capital" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:INVFUNCT ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/capital> ;
    rut:references <http://dbpedia.org/ontology/Country> ;
    rut:source <http://dbpedia.org> ;
    rut:binding [
        a     rut:Binding ;
        rut:bindingValue <http://dbpedia.org/ontology/capital> ;
        rut:parameter rutp:INVFUNCT-P1
    ] ;
    rut:binding [
        a     rut:Binding ;
        rut:bindingValue <http://dbpedia.org/ontology/Country> ;
        rut:parameter rutp:INVFUNCT-T1
    ] ;
    rut:testCaseLogLevel
		rlog:ERROR ;
    .


# height of a dbo:Person between 0.4 and 2.5 meter
rutt:dbo-LITRAN-rangeheightperson
    a       rut:ManualTestCase ;
    dcterms:description "A dbo:Person should have a height between 0.4 and 2.5 meters" ;
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/Person> ;
    rut:references <http://dbpedia.org/ontology/height> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:sparqlWhere """  {
                             {
                                ?this a <http://dbpedia.org/ontology/Person> .
                                ?this <http://dbpedia.org/ontology/height> ?v1 .
                             }  UNION {
                                ?this a ?class .
                                ?class rdfs:subClassOf+ <http://dbpedia.org/ontology/Person> .
                                ?this <http://dbpedia.org/ontology/height> ?v1 .
                             }
                             FILTER ( !(xsd:double(?v1) < 44 || xsd:double(?v1) > 250))} """ ;
    rut:sparqlPrevalence """ SELECT (count(?this) AS ?total) WHERE {
                                 ?this <http://dbpedia.org/ontology/height> ?v1 . } """ ;
    rut:testCaseLogLevel
        rlog:WARN ;
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:path ;
        rut:annotationValue <http://dbpedia.org/ontology/Person>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?v1""";
    ];
    .

# weight of a dbo:Person is between 1 and 375 KG
rutt:dbo-LITRAN-rangeweightperson
      a       rut:PatternBasedTestCase ;
      dcterms:description "The weight of a person should be between 1 and 375 Kg in ordinary cases" ;
      rut:appliesTo rut:Schema ;
      rut:generated rut:ManuallyGenerated ;
      rut:references <http://dbpedia.org/ontology/Person/weight> ;
      rut:source <http://dbpedia.org/ontology/> ;
      rut:basedOnPattern rutp:LITRAN ;
      rut:binding
                [ a       rut:Binding ;
                  rut:bindingValue "[]" ;
                  rut:parameter rutp:LITRAN-T1
                ] ;
      rut:binding
                [ a       rut:Binding ;
                  rut:bindingValue <http://dbpedia.org/ontology/Person/weight> ;
                  rut:parameter rutp:LITRAN-P1
                ] ;
      rut:binding
                [ a       rut:Binding ;
                  rut:bindingValue "!" ;
                  rut:parameter rutp:LITRAN-NOP
                ] ;
      rut:binding
                [ a       rut:Binding ;
                  rut:bindingValue "1" ;
                  rut:parameter rutp:LITRAN-valueMin
                ] ;
      rut:binding
                [ a       rut:Binding ;
                  rut:bindingValue "375" ;
                  rut:parameter rutp:LITRAN-valueMax
                ] ;
    rut:testCaseLogLevel
            rlog:WARN .


# dbo:isbn format
rutt:dbo-MATCH-isbnformat
      a       rut:PatternBasedTestCase ;
      dcterms:description "dbo:isbn looks invalid" ;
      rut:appliesTo rut:Schema ;
      rut:basedOnPattern rutp:MATCH ;
      rut:generated rut:ManuallyGenerated ;
      rut:references <http://dbpedia.org/ontology/isbn> ;
      rut:source <http://dbpedia.org/ontology/> ;
      rut:binding
                    [ a       rut:Binding ;
                      rut:bindingValue <http://dbpedia.org/ontology/iso6393Code> ;
                      rut:parameter rutp:MATCH-P1
                    ] ;
          rut:binding
                    [ a       rut:Binding ;
                      rut:bindingValue " ! " ;
                      rut:parameter rutp:MATCH-OP
                    ] ;
          rut:binding
                    [ a       rut:Binding ;
                      rut:bindingValue """^([iIsSbBnNxX 0-9-])+$""" ;
                      rut:parameter rutp:MATCH-REGEX
                    ] ;
          rut:testCaseLogLevel
                    rlog:WARN ;
          .


# dbo:iso6393Code format
rutt:dbo-MATCH-iso6393codeformat
    a       rut:PatternBasedTestCase ;
    dcterms:description "dbo:iso6393Code should be a 3 letter code" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:MATCH ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/iso6393Code> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:basedOnPattern rutp:MATCH ;
    rut:binding
              [ a       rut:Binding ;
                rut:bindingValue <http://dbpedia.org/ontology/iso6393Code> ;
                rut:parameter rutp:MATCH-P1
              ] ;
    rut:binding
              [ a       rut:Binding ;
                rut:bindingValue " ! " ;
                rut:parameter rutp:MATCH-OP
              ] ;
    rut:binding
              [ a       rut:Binding ;
                rut:bindingValue """^[a-z]{3}$""" ;
                rut:parameter rutp:MATCH-REGEX
              ] ;
    rut:testCaseLogLevel
              rlog:ERROR ;
    .


# dbo:postalCode format
rutt:dbo-MATCH-postalcodeformat
    a       rut:PatternBasedTestCase ;
    dcterms:description "dbo:postalCode looks invalid" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:MATCH ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/postalCode> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:binding
              [ a       rut:Binding ;
                rut:bindingValue <http://dbpedia.org/ontology/postalCode> ;
                rut:parameter rutp:MATCH-P1
              ] ;
    rut:binding
              [ a       rut:Binding ;
                rut:bindingValue " ! " ;
                rut:parameter rutp:MATCH-OP
              ] ;
    rut:binding
              [ a       rut:Binding ;
                rut:bindingValue """^[0-9]{5}$""" ;
                rut:parameter rutp:MATCH-REGEX
              ] ;
    rut:testCaseLogLevel
              rlog:WARN ;
    .


# Resource has dbo:activeYearsEndDate but not dbo:activeYearsStartDate
rutt:dbo-PVT-activeYearsEndStartDate
      a       rut:PatternBasedTestCase ;
      dcterms:description "A resource with dbo:activeYearsEndDate should also have dbo:activeYearsStartDate" ;
      rut:appliesTo rut:Schema ;
      rut:basedOnPattern rutp:PVT ;
      rut:generated rut:ManuallyGenerated ;
      rut:references <http://dbpedia.org/ontology/activeYearsEndDate> ;
      rut:references <http://dbpedia.org/ontology/activeYearsStartDate> ;
      rut:source <http://dbpedia.org/ontology/> ;
rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/activeYearsEndDate> ;
            rut:parameter rutp:PVT-P1
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue " ?v1  " ;
            rut:parameter rutp:PVT-V1
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/activeYearsStartDate> ;
            rut:parameter rutp:PVT-P2
        ] ;
    rut:testCaseLogLevel
                  rlog:WARN .

# Resource has dbo:deatDate but no dbo:birthDate
rutt:dbo-PVT-deathdatebirthdate
      a       rut:PatternBasedTestCase ;
      dcterms:description "A resource with dbo:deathDate should also have dbo:birthDate" ;
      rut:appliesTo rut:Schema ;
      rut:basedOnPattern rutp:PVT ;
      rut:generated rut:ManuallyGenerated ;
      rut:references <http://dbpedia.org/ontology/birthDate> ;
      rut:references <http://dbpedia.org/ontology/deathDate> ;
      rut:source <http://dbpedia.org/ontology/> ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/deathDate> ;
            rut:parameter rutp:PVT-P1
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue " ?v1  " ;
            rut:parameter rutp:PVT-V1
        ] ;
    rut:binding
        [ a     rut:Binding ;
            rut:bindingValue <http://dbpedia.org/ontology/birthDate> ;
            rut:parameter rutp:PVT-P2
        ] ;
    rut:testCaseLogLevel
                  rlog:WARN .


# dbo:Person without a dbo:birthDate
rutt:dbo-TYPRODEP-personwithoutbirthdate
    a       rut:PatternBasedTestCase ;
    dcterms:description "A dbo:Person should have a dbo:birthDate" ;
    rut:appliesTo rut:Schema ;
    rut:basedOnPattern rutp:TYPRODEP ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://dbpedia.org/ontology/Person> ;
    rut:references <http://dbpedia.org/ontology/birthDate> ;
    rut:source <http://dbpedia.org/ontology/> ;
    rut:binding
	[ a       rut:Binding ;
		rut:bindingValue " NOT " ;
		rut:parameter rutp:TYPRODEP-NOT
	] ;
    rut:binding
	[ a       rut:Binding ;
		rut:bindingValue <http://dbpedia.org/ontology/Person> ;
		rut:parameter rutp:TYPRODEP-T1
	] ;
    rut:binding
	[ a       rut:Binding ;
		rut:bindingValue <http://dbpedia.org/ontology/birthDate> ;
		rut:parameter rutp:TYPRODEP-P1
	] ;
    rut:testCaseLogLevel
            rlog:WARN ;
    .
