@prefix dc:    <http://purl.org/dc/elements/1.1/> .
@prefix prov:  <http://www.w3.org/ns/prov#> .
@prefix rutp:  <http://rdfunit.aksw.org/data/patterns#> .
@prefix rlog:  <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#> .
@prefix oslc:  <http://open-services.net/ns/core#> .
@prefix rutg:  <http://rdfunit.aksw.org/data/generators#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dsp:   <http://dublincore.org/dc-dsp#> .
@prefix schema: <http://schema.org/> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rut:   <http://rdfunit.aksw.org/ns/core#> .
@prefix rutr:  <http://rdfunit.aksw.org/data/results#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix spin:  <http://spinrdf.org/spin#> .
@prefix rutt:  <http://rdfunit.aksw.org/data/tests#> .
@prefix ruts:  <http://rdfunit.aksw.org/data/testsuite#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .



####### R2RML manual test cases used to catch data errors directly on the mapping document ########
## in general all ontologies should be loaded along with the data, even for URIs used as objects ##


rutt:rr-subjectmap-template-missing-class
    a       rut:ManualTestCase ;
    dcterms:description "A rr.subjectMap with an rr:template should have a rr:class defined";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#subjectMap>, <http://www.w3.org/ns/r2rml#template>, <http://www.w3.org/ns/r2rml#class> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:WARN ;
    rut:sparqlWhere """ {
                             ?mapping <http://www.w3.org/ns/r2rml#subjectMap> ?this ;
                                       <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                             ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .
                             ?predicate rdfs:domain ?T1 .
                             FILTER (!isBlank(?T1))
                             FILTER ( ?T1 NOT IN ( owl:Thing , prov:Entity , rdfs:Resource, rdf:Property, rdfs:Class, rdfs:Datatype ))
                             # make sure type is not defined dynamically
                             FILTER NOT EXISTS { 
                                 { ?this <http://www.w3.org/ns/r2rml#class> ?class} UNION
                                {?mapping <http://www.w3.org/ns/r2rml#predicateObjectMap>/<http://www.w3.org/ns/r2rml#predicate> rdf:type . }} }""" ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                                 ?mapping <http://www.w3.org/ns/r2rml#subjectMap> ?this ;
                                    <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                                 ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate . } """ ;
rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#class> ;
	];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?T1"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?predicate"""
    ];
	.


rutt:rr-predicateObjectMap-wrong-domain
    a       rut:ManualTestCase ;
    dcterms:description "the rdfs:domain of the rr:predicate value should be the same (or a superclass)of the rr:class";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#rr:predicate>, <http://www.w3.org/ns/r2rml#predicateObjectMap>, <http://www.w3.org/ns/r2rml#class> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?mapping <http://www.w3.org/ns/r2rml#subjectMap> ?this ;
                                      <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .

                            {   # get the class defined in a normal way
                                ?this <http://www.w3.org/ns/r2rml#class> ?class .

                            } UNION {
                                # get the class defined in a dynamic map
                                ?mapping <http://www.w3.org/ns/r2rml#predicateObjectMap> ?classPoMap .
                                ?classPoMap <http://www.w3.org/ns/r2rml#predicate> rdf:type ;
                                            <http://www.w3.org/ns/r2rml#objectMap>/<http://www.w3.org/ns/r2rml#constant> ?class .
                            }

                            ?predicate rdfs:domain ?T1 .
                            FILTER (!isBlank(?T1))
                            FILTER ( ?T1 NOT IN ( owl:Thing , prov:Entity , rdfs:Resource, rdf:Property, rdfs:Class, rdfs:Datatype ))
                            FILTER NOT EXISTS {
                                ?class (rdfs:subClassOf|(owl:equivalentClass|^owl:equivalentClass))* ?T1
                            }

                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                                 ?mapping <http://www.w3.org/ns/r2rml#subjectMap> ?this ;
                                           <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                                 ?this <http://www.w3.org/ns/r2rml#class> ?class .
                                 ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate . }  """ ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#class> ;
	];
	rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?class"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:object ;
        rut:annotationValue """?T1"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?predicate"""
    ];
	.

rutt:rr-predicateObjectMap-missing-datatype
    a       rut:ManualTestCase ;
    dcterms:description "The predicate is defined as a datatype but no rr:datatype exists in the rr:objectMap";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#rr:predicate>, <http://www.w3.org/ns/r2rml#predicateObjectMap>, <http://www.w3.org/ns/r2rml#class> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?mapping <http://www.w3.org/ns/r2rml#subjectMap>/<http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 .
                            ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this . # rr:objectMap

                            FILTER EXISTS {
                                {   # xsd datatypes
                                    ?P1 rdfs:range ?D1 .
                                    FILTER ( STRSTARTS(str(?D1), "http://www.w3.org/2001/XMLSchema#") ).
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    ?D1 rdf:type/rdfs:subClassOf* rdfs:Datatype .
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    ?P1 rdf:type/rdfs:subClassOf* owl:DatatypeProperty .
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    FILTER ( ?D1 in (rdfs:Literal, rdf:langString) ) .
                                } UNION {
                                    ?P1 schema:rangeIncludes ?D1 .
                                    ?D1 rdf:type|rdfs:subClassOf+ schema:DataType .
                                    FILTER ( ?D1 NOT IN ( schema:Text, schema:URL ))
                                }
                            }
                            FILTER ( ?D1 NOT IN ( <http://ogp.me/ns/class#string>, <http://ogp.me/ns/class#url>, <http://www.w3.org/2001/XMLSchema#anyURI>, <http://www.w3.org/2001/XMLSchema#string> ))

                            FILTER NOT EXISTS {
                                ?this <http://www.w3.org/ns/r2rml#datatype> ?something .
                            }
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                                 ?mapping <http://www.w3.org/ns/r2rml#subjectMap>/<http://www.w3.org/ns/r2rml#class> ?class ;
                                           <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                                 ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .
                                 ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this . }  """ ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#datatype> ;
	];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?D1"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?P1"""
    ];
	.

rutt:rr-predicateObjectMap-incorrect-datatype
    a       rut:ManualTestCase ;
    dcterms:description "The predicate is defined as a datatype but rr:datatype does not match the definition";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#rr:predicate>, <http://www.w3.org/ns/r2rml#predicateObjectMap>, <http://www.w3.org/ns/r2rml#objectMap> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?mapping <http://www.w3.org/ns/r2rml#subjectMap>/<http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .
                            ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this . # rr:objectMap
                            ?this <http://www.w3.org/ns/r2rml#datatype> ?datatype .
                            ?predicate rdfs:range ?D1 . # we need the range of the predicate defined in the current graph

                            FILTER EXISTS {
                                {   # xsd datatypes
                                    ?P1 rdfs:range ?D1 .
                                    FILTER ( STRSTARTS(str(?D1), "http://www.w3.org/2001/XMLSchema#") ).
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    ?D1 rdf:type/rdfs:subClassOf* rdfs:Datatype .
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    ?P1 rdf:type/rdfs:subClassOf* owl:DatatypeProperty .
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    FILTER ( ?D1 in (rdfs:Literal, rdf:langString) ) .
                                } UNION {
                                    ?P1 schema:rangeIncludes ?D1 .
                                    ?D1 rdf:type|rdfs:subClassOf+ schema:DataType .
                                    FILTER ( ?D1 NOT IN ( schema:Text, schema:URL ))
                                }
                            }
                            FILTER ( ?D1 NOT IN ( <http://ogp.me/ns/class#string>, <http://ogp.me/ns/class#url>, <http://www.w3.org/2001/XMLSchema#anyURI> ))

                            FILTER NOT EXISTS {
                                ?datatype rdfs:subClassOf* ?D1
                            }
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                                 ?mapping <http://www.w3.org/ns/r2rml#subjectMap>/<http://www.w3.org/ns/r2rml#class> ?class ;
                                           <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                                 ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .
                                 ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this . }  """ ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#datatype> ;
	];
	rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?datatype"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:object ;
        rut:annotationValue """?D1"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?P1"""
    ];
	.

rutt:rr-predicateObjectMap-constant-should-NOT-be-IRI
    a       rut:ManualTestCase ;
    dcterms:description "The predicate is defined as a Literal but it is maped to a constant with  rr:termType rr:IRI";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#rr:predicate>, <http://www.w3.org/ns/r2rml#objectMap>, <http://www.w3.org/ns/r2rml#constant>, <http://www.w3.org/ns/r2rml#termType> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 .
                            ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this . # rr:objectMap
                            ?this <http://www.w3.org/ns/r2rml#constant> ?constant ;
                                      <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI> .


                            FILTER EXISTS {
                                {   # xsd datatypes
                                    ?P1 rdfs:range ?D1 .
                                    FILTER ( STRSTARTS(str(?D1), "http://www.w3.org/2001/XMLSchema#") ).
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    ?D1 rdf:type/rdfs:subClassOf* rdfs:Datatype .
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    ?P1 rdf:type/rdfs:subClassOf* owl:DatatypeProperty .
                                } UNION {
                                    ?P1 rdfs:range ?D1 .
                                    FILTER ( ?D1 in (rdfs:Literal, rdf:langString) ) .
                                } UNION {
                                    ?P1 schema:rangeIncludes ?D1 .
                                    ?D1 rdf:type|rdfs:subClassOf+ schema:DataType .
                                    FILTER ( ?D1 NOT IN ( schema:Text, schema:URL ))
                                }
                                FILTER ( ?D1 NOT IN ( <http://ogp.me/ns/class#string>, <http://ogp.me/ns/class#url>, <http://www.w3.org/2001/XMLSchema#anyURI> ))
                            }
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                                 ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 .
                                 ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this .
                                 ?this <http://www.w3.org/ns/r2rml#constant> ?constant .}  """ ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#termType> ;
	];
	rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue <http://www.w3.org/ns/r2rml#IRI>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?P1"""
    ];
	.


rutt:rr-predicateObjectMap-should-be-IRI
    a       rut:ManualTestCase ;
    dcterms:description "The predicate is defined as an object but it is maped without the rr:termType rr:IRI";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#rr:predicate>, <http://www.w3.org/ns/r2rml#objectMap> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 .
                            ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this . # rr:objectMap
                            ?this <http://www.w3.org/ns/r2rml#constant>|<http://www.w3.org/ns/r2rml#template>|<http://www.w3.org/ns/r2rml#column> ?val .

                            FILTER EXISTS {
                                {   # xsd datatypes
                                    ?P1 rdfs:range <http://www.w3.org/2001/XMLSchema#anyURI> .
                                } UNION {
                                    ?P1 rdfs:range ?C1 .
                                    ?C1 rdf:type/rdfs:subClassOf* ?C2.
                                    FILTER ( ?C1 IN (rdfs:Class, owl:Class)
                                            || ?C2 IN (rdfs:Class, owl:Class))
                                    FILTER ( ?C1 NOT IN (rdfs:Literal, rdf:langString, rdfs:Datatype, owl:DatatypeProperty)
                                            && ?C2 NOT IN (rdfs:Literal, rdf:langString, rdfs:Datatype, owl:DatatypeProperty))
                                    FILTER ( ! STRSTARTS(str(?D1), "http://www.w3.org/2001/XMLSchema#") ).
                                } UNION {
                                    ?P1 rdf:type/rdfs:subClassOf* ?P2 .
                                    FILTER (?P2 IN ( owl:ObjectProperty, owl:InverseFunctionalProperty, owl:IrreflexiveProperty, owl:inverseOf, owl:propertyChainAxiom,
                                                    owl:ReflexiveProperty, owl:SymmetricProperty, owl:TransitiveProperty, owl:bottomObjectProperty, owl:topObjectProperty))
                                } UNION {
                                    ?P1 schema:rangeIncludes ?D1 .
                                    FILTER NOT EXISTS {?D1 rdf:type|rdfs:subClassOf+ schema:DataType .}
                                }
                            }


                            FILTER NOT EXISTS {
                                ?this <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI>
                            }
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                                 ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 .
                                 ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?this .
                                 ?this <http://www.w3.org/ns/r2rml#constant>|<http://www.w3.org/ns/r2rml#template>|<http://www.w3.org/ns/r2rml#column> ?val .}  """ ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#termType> ;
	];
	rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue <http://www.w3.org/ns/r2rml#IRI>
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?P1"""
    ];
	.


rutt:rr-produces-disjoint-class-errors
    a       rut:ManualTestCase ;
    dcterms:description "A mapping defines classes that are disjoint to each other";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references  <http://www.w3.org/ns/r2rml#subjectMap>, <http://www.w3.org/ns/r2rml#class> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?mapping <http://www.w3.org/ns/r2rml#subjectMap> ?this .

                            # get rr class 1
                            {   # get the class defined in a normal way
                                ?this <http://www.w3.org/ns/r2rml#class> ?T1 .
                            } UNION {
                                ?mapping <http://www.w3.org/ns/r2rml#predicateObjectMap> ?classPoMap .
                                ?classPoMap <http://www.w3.org/ns/r2rml#predicate> rdf:type ;
                                            <http://www.w3.org/ns/r2rml#objectMap>/<http://www.w3.org/ns/r2rml#constant> ?T1 .
                            }

                            # get rr class 2
                            {   # get the class defined in a normal way
                                ?this <http://www.w3.org/ns/r2rml#class> ?T2 .
                            } UNION {
                                ?mapping <http://www.w3.org/ns/r2rml#predicateObjectMap> ?classPoMap .
                                ?classPoMap <http://www.w3.org/ns/r2rml#predicate> rdf:type ;
                                            <http://www.w3.org/ns/r2rml#objectMap>/<http://www.w3.org/ns/r2rml#constant> ?T2 .
                            }
                            # make sure we have >2 classes
                            FILTER ( ?T1 != ?T2 )

                            # get the ontology disjoint axioms
                            {
                                ?T1 owl:disjointWith ?T2 .
                            } UNION {
                                ?T2 owl:disjointWith ?T1 .
                            } UNION {
                                ?r a owl:AllDisjointClasses ;
                                    owl:members ?T1 ;
                                    owl:members ?T2 .
                            }
                        } """ ;
    rut:sparqlPrevalence """  """ ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#class> ;
	];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?T1"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?T2"""
    ];
	.

rutt:rr-produces-range-errors
    a       rut:ManualTestCase ;
    dcterms:description "A mapping wrongly defines the range";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#rr:predicate>, <http://www.w3.org/ns/r2rml#subjectMap>, <http://www.w3.org/ns/r2rml#class> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?mappingTo <http://www.w3.org/ns/r2rml#subjectMap> ?this .

                            {   # get the class defined in a normal way
                                ?this <http://www.w3.org/ns/r2rml#class> ?T1 .
                            } UNION {
                                ?mapping <http://www.w3.org/ns/r2rml#predicateObjectMap> ?classPoMap .
                                ?classPoMap <http://www.w3.org/ns/r2rml#predicate> rdf:type ;
                                            <http://www.w3.org/ns/r2rml#objectMap>/<http://www.w3.org/ns/r2rml#constant> ?T1 .
                            }

                            ?mappingFrom <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .
                            ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?objM .
                            ?objM <http://www.w3.org/ns/r2rml#parentTriplesMap> ?mappingTo .

                            ?predicate rdfs:range ?T2 .

                            FILTER NOT EXISTS {
                                ?T2 (rdfs:subClassOf|(owl:equivalentClass|^owl:equivalentClass))* ?T1 .
                            }
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                             ?mappingTo <http://www.w3.org/ns/r2rml#subjectMap> ?this ;

                             {   # get the class defined in a normal way
                                 ?this <http://www.w3.org/ns/r2rml#class> ?T1 .
                             } UNION {
                                 ?mapping <http://www.w3.org/ns/r2rml#predicateObjectMap> ?classPoMap .
                                 ?classPoMap <http://www.w3.org/ns/r2rml#predicate> rdf:type ;
                                             <http://www.w3.org/ns/r2rml#objectMap>/<http://www.w3.org/ns/r2rml#constant> ?T1 .
                             }

                             ?mappingFrom <http://www.w3.org/ns/r2rml#predicateObjectMap> ?poMap .
                             ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?predicate .
                             ?poMap <http://www.w3.org/ns/r2rml#objectMap> ?objM .
                             ?objM <http://www.w3.org/ns/r2rml#parentTriplesMap> ?mappingTo .

                             ?predicate rdfs:range ?T2 .  }""" ;
    rut:resultAnnotation [
       a rut:ResultAnnotation ;
       rut:annotationProperty sh:path ;
       rut:annotationValue <http://www.w3.org/ns/r2rml#class> ;
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?T1"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty sh:object ;
        rut:annotationValue """?T2"""
    ];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?predicate"""
    ];
    .


rutt:rr-language-missing
    a       rut:ManualTestCase ;
    dcterms:description "A property is defined as rdf:langString but no language is given";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#predicateObjectMap> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:ERROR ;
    rut:sparqlWhere """ {
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 ;
                                    <http://www.w3.org/ns/r2rml#objectMap> ?this .

                            ?P1 rdfs:range rdf:langString .

                            FILTER NOT EXISTS {
                                ?this <http://www.w3.org/ns/r2rml#language> ?lang
                            }
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                             ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 ;
                                    <http://www.w3.org/ns/r2rml#objectMap> ?this .}""" ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#language> ;
	];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?P1"""
    ];
	.


rutt:rr-deprecated-property
    a       rut:ManualTestCase ;
    dcterms:description "A property is used but defined as deprecated";
    rut:appliesTo rut:Schema ;
    rut:generated rut:ManuallyGenerated ;
    rut:references <http://www.w3.org/ns/r2rml#predicateObjectMap> ;
    rut:source <http://www.w3.org/ns/r2rml#> ;
    rut:testCaseLogLevel rlog:WARN ;
    rut:sparqlWhere """ {
                            ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 ;
                                    <http://www.w3.org/ns/r2rml#objectMap> ?this .

                            ?P1 rdf:type/rdfs:subClassOf* owl:deprecatedProperty .
                        } """ ;
    rut:sparqlPrevalence """ SELECT (count(distinct ?this) AS ?total) WHERE {
                             ?poMap <http://www.w3.org/ns/r2rml#predicate>|(<http://www.w3.org/ns/r2rml#predicateMap>/<http://www.w3.org/ns/r2rml#constant>) ?P1 ;
                                    <http://www.w3.org/ns/r2rml#objectMap> ?this .}""" ;
	rut:resultAnnotation [
	   a rut:ResultAnnotation ;
	   rut:annotationProperty sh:path ;
	   rut:annotationValue <http://www.w3.org/ns/r2rml#language> ;
	];
    rut:resultAnnotation [
        a rut:ResultAnnotation ;
        rut:annotationProperty rdf:predicate ;
        rut:annotationValue """?P1"""
    ];
	.
