@prefix ex: <http://example.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rlog: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#> .


# A sample shape, meant only to test the shape readers (ATM)

ex:MyShape
	a sh:Shape ;
	sh:scopeClass ex:Person ;

	sh:property [
		sh:predicate ex:classCheckProperty ;
		sh:class ex:SuperClass ;
	] ;
	sh:property [
        sh:predicate ex:checkDirectClass ;
        sh:directType ex:DirectClass ;
    ] ;

    sh:property [
        sh:predicate ex:checkDatatype ;
        sh:datatype xsd:date ;
    ] ;

    sh:property [
        sh:predicate ex:checkEquals ;
        sh:equals ex:checkEqualsTo ;
    ] ;
    sh:property [
        sh:predicate ex:checkNotEquals ;
        sh:notEquals ex:checkNotEqualsTo ;
    ] ;
    sh:property [
        sh:predicate ex:checkLength ;
        sh:minLength 3;
        sh:maxLength 5;
    ];
    sh:property [
        sh:predicate ex:checkMinMaxExclusive ;
        sh:minExclusive 5 ;
        sh:maxExclusive 10 ;
    ] ;
    sh:property [
        sh:predicate ex:checkMinMaxInclusive ;
        sh:minInclusive 5 ;
        sh:maxInclusive 10 ;
    ] ;


    # sh:nodeType
	sh:property [
		sh:predicate ex:checkNodeKindIRI ;
		sh:nodeKind sh:IRI ;
    ] ;
    sh:property [
        sh:predicate ex:checkNodeKindLiteral ;
        sh:nodeKind sh:Literal ;
    ]  ;
    sh:property [
        sh:predicate ex:checkNodeKindBlankNode ;
        sh:nodeKind sh:BlankNode ;
    ] ;

.