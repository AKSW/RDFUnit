@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rlog:    <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#> .
@prefix rutg: <http://rdfunit.aksw.org/data/generators#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ruto: <http://rdfunit.aksw.org/ns/core#> .
@prefix rutp: <http://rdfunit.aksw.org/data/patterns#> .
@prefix rutt: <http://rdfunit.aksw.org/data/tests#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

# rdfs:label should exist once for every language (in DBpedia.org we load 20 languages)
rutt:dbo-CARD-rdfslabelforeachlanguage
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:OWLCARD ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://www.w3.org/2000/01/rdf-schema#label> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://www.w3.org/2000/01/rdf-schema#label> ?v1 .
                                 GROUP BY ?s
                                 HAVING count(?v1) > 20 } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://www.w3.org/2000/01/rdf-schema#label> ?v1 . } """ .


# dbo:deathDate after dbo:birthDate
rutt:dbo-COMP-birthdeatdate
    a       ruto:PatternBasedTestCase ;
    ruto:appliesTo ruto:Schema ;
    ruto:basedOnPattern rutp:COMP ;
    ruto:generated ruto:ManuallyGenerated ;
    ruto:references <http://dbpedia.org/ontology/birthDate> ;
    ruto:references <http://dbpedia.org/ontology/deathDate> ;
    ruto:source <http://dbpedia.org/ontology/> ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue <http://dbpedia.org/ontology/birthDate> ;
            ruto:parameter rutp:COMP-P1
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue <http://dbpedia.org/ontology/deathDate> ;
            ruto:parameter rutp:COMP-P2
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue ">" ;
            ruto:parameter rutp:COMP-OP
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue "'A dbp:birthDate cannot be after a dbo:deathDate'" ;
            ruto:parameter rutp:COMP-MESSAGE
        ] ;
    ruto:testCaseLogLevel
                  rlog:Error .


# dbo:demolitionDate after dbo:buildingStartDate
rutt:dbo-COMP-demolitionbuildingstartdate
    a       ruto:PatternBasedTestCase ;
    ruto:appliesTo ruto:Schema ;
    ruto:basedOnPattern rutp:COMP ;
    ruto:generated ruto:ManuallyGenerated ;
    ruto:references <http://dbpedia.org/ontology/buildingStartDate>, <http://dbpedia.org/ontology/demolitionDate> ;
    ruto:source <http://dbpedia.org/ontology/> ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue <http://dbpedia.org/ontology/buildingStartDate> ;
            ruto:parameter rutp:COMP-P1
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue <http://dbpedia.org/ontology/demolitionDate> ;
            ruto:parameter rutp:COMP-P2
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue ">" ;
            ruto:parameter rutp:COMP-OP
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue "'A dbp:buildingStartDate cannot be after a dbo:demolitionDate'" ;
            ruto:parameter rutp:COMP-MESSAGE
        ] ;
    ruto:testCaseLogLevel
                  rlog:Error .

				 
# dbo:latestReleaseDate after dbo:releaseDate
rutt:dbo-COMP-releaselatestreleasedate
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:COMP ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/latestReleaseDate>, <http://dbpedia.org/ontology/releaseDate> ;
      ruto:source <http://dbpedia.org/ontology/> ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue <http://dbpedia.org/ontology/releaseDate> ;
            ruto:parameter rutp:COMP-P1
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue <http://dbpedia.org/ontology/latestReleaseDate> ;
            ruto:parameter rutp:COMP-P2
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue ">" ;
            ruto:parameter rutp:COMP-OP
        ] ;
    ruto:binding
        [ a     ruto:Binding ;
            ruto:bindingValue "'A dbp:releaseDate cannot be after a dbo:latestReleaseDate'" ;
            ruto:parameter rutp:COMP-MESSAGE
        ] ;
    ruto:testCaseLogLevel
                  rlog:Error .


# Different countries having the same capital
rutt:dbo-INVFUNC-countriessamecapital
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:TYPRODEP ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/capital> ;
      ruto:references <http://dbpedia.org/ontology/Country> ;
      ruto:source <http://dbpedia.org> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s1 <http://dbpedia.org/ontology/capital> ?v1 . 
                                 ?s2 <http://dbpedia.org/ontology/capital> ?v1 . 
                                 ?s1 a <http://dbpedia.org/ontology/Country> . 
                                 ?s2 a <http://dbpedia.org/ontology/Country> . 
                                 FILTER (?s1 != ?s2 } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?v1) AS ?total) WHERE {
                                 ?s1 <http://dbpedia.org/ontology/capital> ?v1 . 
                                 ?s1 a <http://dbpedia.org/ontology/Country> . } """ .

                                 
# height of a dbo:Person between 0.4 and 2.5 meter
rutt:dbo-LITRAN-rangeheightperson
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:LITRAN ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/Person> ;
      ruto:references <http://dbpedia.org/ontology/height> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s a <http://dbpedia.org/ontology/Person> .
                                 ?s <http://dbpedia.org/ontology/height> ?v1 .
                                 FILTER ( !(xsd:double(?v1) < 0.4 || xsd:double(?v1) > 2.5)) } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/height> ?v1 . } """ .

# weight of a dbo:Person is between 1 and 375 KG        
rutt:dbo-LITRAN-rangeweightperson
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:LITRAN ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/Person/weight> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://dbpedia.org/ontology/Person/weight> ?v1 .
                                 FILTER (!(xsd:double(?v1) >= 1 && xsd:double(?v1) <= 375)) } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/Person/weight> ?v1 . } """ .

                                 
# dbo:isbn format
rutt:dbo-MATCH-isbnformat
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:MATCH ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/isbn> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://dbpedia.org/ontology/isbn> ?v1 .
                                 FILTER (! regex(str(?v1), "^([iIsSbBnN 0-9-])*$")) } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/isbn> ?v1 . } """ .

                                 
# dbo:iso6393Code format
rutt:dbo-MATCH-iso6393codeformat
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:MATCH ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/iso6393Code> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://dbpedia.org/ontology/iso6393Code> ?v1 .
                                 FILTER (! (regex(str(?v), "[a-z]{3}"))) } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/iso6393Code> ?v1 . } """ .
                                 
                                 
# dbo:postalCode format
rutt:dbo-MATCH-postalcodeformat
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:MATCH ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/postalCode> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://dbpedia.org/ontology/postalCode> ?v1 .
                                 FILTER (! (regex(str(?v),"^[0-9]{5}$"))) } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/postalCode> ?v1 . } """ .

                                 
# Resource has dbo:activeYearsEndDate but not dbo:activeYearsStartDate                                 
rutt:dbo-PROPDEP-activeYearsEndStartDate
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:PROPDEP ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/activeYearsEndDate> ;
      ruto:references <http://dbpedia.org/ontology/activeYearsStartDate> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://dbpedia.org/ontology/activeYearsEndDate> ?v1 .
                                 FILTER NOT EXISTS {?s <http://dbpedia.org/ontology/activeYearsStartDate> ?v2} } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/activeYearsEndDate> ?v1 . } """ .

# Resource has dbo:deatDate but no dbo:birthDate                                 
rutt:dbo-PROPDEP-deathdatebirthdate
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:PROPDEP ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/birthDate> ;
      ruto:references <http://dbpedia.org/ontology/deathDate> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://dbpedia.org/ontology/deathDate> ?v1 .
                                 FILTER NOT EXISTS {?s <http://dbpedia.org/ontology/birthDate> ?v2} } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://dbpedia.org/ontology/deathDate> ?v1 . } """ .
                                 
                                 
# Resource cannot have a foaf property if it is not an owl:Thing
rutt:dbo-RDFSDOMAIN-foafpropertyowlthing
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:RDFSDOMAIN ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://xmlns.com/foaf/0.1/name> ;
      ruto:references <http://www.w3.org/2002/07/owl#Thing> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s <http://xmlns.com/foaf/0.1/name> ?v1 .
                                 FILTER NOT EXISTS {?s a <http://www.w3.org/2002/07/owl#Thing>} } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s <http://xmlns.com/foaf/0.1/name> ?v1 . } """ .

# dbo:Person without a dbo:birthDate
rutt:dbo-TYPRODEP-personwithoutbirthdate
      a       ruto:PatternBasedTestCase ;
      ruto:appliesTo ruto:Schema ;
      ruto:basedOnPattern rutp:TYPRODEP ;
      ruto:generated ruto:ManuallyGenerated ;
      ruto:references <http://dbpedia.org/ontology/Person> ;
      ruto:references <http://dbpedia.org/ontology/birthDate> ;
      ruto:source <http://dbpedia.org/ontology/> ;
      ruto:sparqlWhere """ SELECT DISTINCT ?s WHERE {
                                 ?s a <http://dbpedia.org/ontology/Person> .
                                 FILTER NOT EXISTS {?s <http://dbpedia.org/ontology/birthDate> ?v1 } } """ ;
      ruto:sparqlPrevalence """ SELECT (count(?s) AS ?total) WHERE {
                                 ?s a <http://dbpedia.org/ontology/Person> . } """ .

